●ロスター情報クエリ

SELECT r.season, t.city, t.name, po.name as position, r.number, p.firstname, p.lastname, r.rating, p.birthday, p.height, p.weight, s.odflg as starter 
FROM rosters r 
LEFT JOIN players p ON p.id = r.player_id
LEFT JOIN teams t ON t.id = r.team_id
LEFT JOIN positions po ON po.id = r.position_id
LEFT JOIN starters s ON s.roster_id = r.id
WHERE r.season = 2013 AND r.team_id = 1;


●スターター情報クエリ

SELECT s.id, s.season, t.city, t.name, po.name as position, po.category as cat, po.abstract_category as abscat, r.number, p.firstname, p.lastname, r.rating, p.birthday, p.height, p.weight, s.odflg as starter, f.name as formation 
FROM starters s 
LEFT JOIN rosters r ON r.id = s.roster_id
LEFT JOIN players p ON p.id = r.player_id
LEFT JOIN teams t ON t.id = r.team_id
LEFT JOIN positions po ON po.id = r.position_id
LEFT JOIN tf_relations tf ON tf.season = r.season AND tf.team_id = r.team_id AND tf.odflg = s.odflg 
LEFT JOIN formations f ON f.id = tf.formation_id
WHERE s.season = 2013 AND r.team_id = 1;


SELECT s.id, s.season, t.city, t.name, po.name as position, r.number, p.firstname, p.lastname, r.rating, p.birthday, p.height, p.weight, s.odflg as starter, f.name, pf.position_category as poscat, pf.abstract_category as abscat 
FROM starters s 
LEFT JOIN rosters r ON r.id = s.roster_id
LEFT JOIN players p ON p.id = r.player_id
LEFT JOIN teams t ON t.id = r.team_id
LEFT JOIN positions po ON po.id = r.position_id
LEFT JOIN tf_relations tf ON tf.season = r.season AND tf.team_id = r.team_id AND tf.odflg = s.odflg 
LEFT JOIN formations f ON f.id = tf.formation_id
LEFT JOIN pf_relations pf ON pf.formation_id = tf.formation_id AND (CASE WHEN tf.abstract_flg = true THEN pf.abstract_category = po.abstract_category ELSE pf.position_category = po.category END) 
WHERE s.season = 2013 AND r.team_id = 1;